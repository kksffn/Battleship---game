@startuml

title __PREPARE's Class Diagram__\n

  package cz.kksffn {
    package prepare {
      abstract class cz.kksffn.prepare.ASetShips {
          ~ coordinatesOfShips : HashMap<ShipName, ArrayList<Integer>>
          ~ success : boolean
          {abstract} + getCoordinatesOfShips()
          {abstract} + getSuccess()
          {abstract} ~ actualizeCoordinatesOfShips()
          {abstract} ~ instructions()
          {abstract} ~ sailOutBattleship()
          {abstract} ~ sailOutCarrier()
          {abstract} ~ sailOutCruiser()
          {abstract} ~ sailOutFrigate()
          {abstract} ~ sailOutPatrol()
          {abstract} ~ sailOutYacht()
      }
    }
  }
  

  package cz.kksffn {
    package prepare {
      interface cz.kksffn.prepare.ISetShips {
          {abstract} + getCoordinatesOfShips()
          {abstract} + getSuccess()
          {abstract} + setShipCoordinates()
      }
    }
  }
  

  package cz.kksffn {
    package prepare {
      class cz.kksffn.prepare.SetShipsInConsole {
          - coordinatesOfShips : HashMap<ShipName, ArrayList<Integer>>
          - forbiddenXY : ArrayList<Integer>
          - isHuman : boolean
          - rand : Random
          - success : boolean
          + SetShipsInConsole()
          + getCoordinatesOfShips()
          + getSuccess()
          + setShipCoordinates()
          ~ actualizeCoordinatesOfShips()
          ~ instructions()
          ~ sailOutBattleship()
          ~ sailOutCarrier()
          ~ sailOutCruiser()
          ~ sailOutFrigate()
          ~ sailOutPatrol()
          ~ sailOutYacht()
          - actualizeForbiddenXY()
          - battleshipIsInsideTheBoard()
          - carrierIsInsideTheBoard()
          - cruiserIsInsideTheBoard()
          - frigateIsInsideTheBoard()
          - getChoiceForCruiser()
          - getChoiceForFrigate()
          - getChoiceForPatrol()
          - getChoiceForYacht()
          - informationForBattleship()
          - informationForCarrier()
          - inputInCollisions()
          - notCollision()
          - patrolIsInsideTheBoard()
          - trySailOutBattleship()
          - trySailOutCarrier()
          - trySailOutCruiser()
          - trySailOutFrigate()
          - yachtIsInsideTheBoard()
      }
    }
  }
  

  package cz.kksffn {
    package prepare {
      enum cz.kksffn.prepare.ShipName {
        BATTLESHIP
        CARRIER
        CRUISER
        FRIGATE
        PATROL
        YACHT
        showIt
      }
    }
  }
  

  cz.kksffn.prepare.ASetShips .up.|> cz.kksffn.prepare.ISetShips
  cz.kksffn.prepare.ASetShips o-- cz.kksffn.display.IMap : map
  cz.kksffn.prepare.SetShipsInConsole -up-|> cz.kksffn.prepare.ASetShips
  cz.kksffn.prepare.SetShipsInConsole o-- cz.kksffn.display.IMap : map


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
